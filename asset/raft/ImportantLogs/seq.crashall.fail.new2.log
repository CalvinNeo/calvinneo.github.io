[----------] 4 tests from Persist
[ RUN      ] Persist.CrashAll
=== Clearing 0
RaftLog[5, 3200](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7100,Leader=]: Add Peer 127.0.0.1:7101. Now size 0
Create channel from host 127.0.0.1:7100 to remote 127.0.0.1:7101
RaftLog[5, 3201](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7100,Leader=]: Add Peer 127.0.0.1:7102. Now size 1
Create channel from host 127.0.0.1:7100 to remote 127.0.0.1:7102
RaftLog[5, 3201](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7101,Leader=]: Add Peer 127.0.0.1:7100. Now size 0
Create channel from host 127.0.0.1:7101 to remote 127.0.0.1:7100
RaftLog[5, 3201](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7101,Leader=]: Add Peer 127.0.0.1:7102. Now size 1
Create channel from host 127.0.0.1:7101 to remote 127.0.0.1:7102
RaftLog[5, 3201](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7102,Leader=]: Add Peer 127.0.0.1:7100. Now size 0
Create channel from host 127.0.0.1:7102 to remote 127.0.0.1:7100
RaftLog[5, 3202](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7102,Leader=]: Add Peer 127.0.0.1:7101. Now size 1
Create channel from host 127.0.0.1:7102 to remote 127.0.0.1:7101
RaftLog[5, 3202](src/test/../node.h:468@run) [Me=127.0.0.1:7100,Leader=]: Run node. Switch state to Follower.
RaftLog[5, 3202](src/test/../node.h:468@run) [Me=127.0.0.1:7101,Leader=]: Run node. Switch state to Follower.
RaftLog[5, 3203](src/test/../node.h:468@run) [Me=127.0.0.1:7102,Leader=]: Run node. Switch state to Follower.
set_callback
set_callback granted lock
set_callback finish
Start wait
           Name        State  Term  log size  commit lastapp   peers    run  trans
 127.0.0.1:7100     Follower     0         0      -1      -1       2      T      0
 127.0.0.1:7101     Follower     0         0      -1      -1       2      T      0
 127.0.0.1:7102     Follower     0         0      -1      -1       2      T      0
GTEST: WaitElection ob 127.0.0.1:7100
RaftLog[5, 3664](src/node_rpc_r.cpp:35@do_election) [Me=127.0.0.1:7100,Leader=]: Lost Leader of (). Start election term: 1, will timeout in 550 ms. My last_log_index = -1
RaftLog[5, 3664](src/node_rpc_r.cpp:51@do_election) [Me=127.0.0.1:7100,Leader=]: Send RequestVoteRequest from 127.0.0.1:7100 to 127.0.0.1:7101
RaftLog[5, 3664](src/node_rpc_r.cpp:51@do_election) [Me=127.0.0.1:7100,Leader=]: Send RequestVoteRequest from 127.0.0.1:7100 to 127.0.0.1:7102
RaftLog[5, 3667](src/node_rpc_r.cpp:81@on_vote_request) [Me=127.0.0.1:7101,Leader=]: Become Follower: Receive RequestVoteRequest from 127.0.0.1:7100 with new term of 1, me 0. My last_log_index -1, peer 0
RaftLog[5, 3667](src/node_rpc_r.cpp:128@on_vote_request) [Me=127.0.0.1:7101,Leader=]: Respond from 127.0.0.1:7101 to 127.0.0.1:7100 with YES
RaftLog[5, 3667](src/node_rpc_r.cpp:81@on_vote_request) [Me=127.0.0.1:7102,Leader=]: Become Follower: Receive RequestVoteRequest from 127.0.0.1:7100 with new term of 1, me 0. My last_log_index -1, peer 0
RaftLog[5, 3668](src/node_rpc_r.cpp:128@on_vote_request) [Me=127.0.0.1:7102,Leader=]: Respond from 127.0.0.1:7102 to 127.0.0.1:7100 with YES
RaftLog[5, 3669](src/node_rpc_r.cpp:153@on_vote_response) [Me=127.0.0.1:7100,Leader=]: Receive vote from 127.0.0.1:7101 = YES
RaftLog[5, 3669](src/node_state.cpp:54@become_leader) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Now I am the Leader of term 1, because I got 2 votes.
End wait
set_callback
set_callback granted lock
set_callback finish
GTEST: WaitElection Finish with 4.
RaftLog[5, 3696](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 2, request.seq() = 1
RaftLog[5, 3696](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 2, request.seq() = 1
RaftLog[5, 5765](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 68, request.seq() = 67
GTEST: Do logs[0] = 'log0'
RaftLog[5, 7121](src/test/../node.h:731@do_log) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Append LOCAL log Index 0, Term 1, commit_index -1. Now copy to peers.
RaftLog[5, 7121](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7101 LogEntries[0, 0]
RaftLog[5, 7121](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7101, size 1 term 1.
RaftLog[5, 7121](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7102 LogEntries[0, 0]
RaftLog[5, 7121](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7102, size 1 term 1.
RaftLog[5, 7121](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 1. last_log_index = 0, seq 112
RaftLog[5, 7122](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from -1 to 0 with vote 2. match_index {127.0.0.1:7102:0;}.
RaftLog[5, 7122](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 0 to 0
RaftLog[5, 7122](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 7122](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 1. last_log_index = 0, seq 112
RaftLog[5, 7127](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 0, seq 113, request.prev_log_index() 0, last_log_index() = 0.
RaftLog[5, 7127](src/node.h:606@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply from 0 to 0
RaftLog[5, 7127](src/node.h:617@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 7127](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 0, seq 113, request.prev_log_index() 0, last_log_index() = 0.
RaftLog[5, 7127](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 0 to 0
RaftLog[5, 7127](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
GTEST: support 3 is not enough. logs[0] is not committed. term 1, original_term 1
GTEST: Do logs[1] = 'log1'
RaftLog[5, 8121](src/test/../node.h:731@do_log) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Append LOCAL log Index 1, Term 1, commit_index 0. Now copy to peers.
RaftLog[5, 8121](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7101 LogEntries[1, 1]
RaftLog[5, 8121](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7101, size 1 term 1.
RaftLog[5, 8122](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7102 LogEntries[1, 1]
RaftLog[5, 8122](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7102, size 1 term 1.
RaftLog[5, 8122](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain 0, because it's GE than Leader's commit 0, entries_size = 1. last_log_index = 1, seq 146
RaftLog[5, 8122](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from 0 to 1 with vote 2. match_index {127.0.0.1:7102:1;}.
RaftLog[5, 8122](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 1 to 1
RaftLog[5, 8122](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 8122](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain 0, because it's GE than Leader's commit 0, entries_size = 1. last_log_index = 1, seq 146
RaftLog[5, 8148](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 1, seq 147, request.prev_log_index() 1, last_log_index() = 1.
RaftLog[5, 8148](src/node.h:606@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply from 1 to 1
RaftLog[5, 8148](src/node.h:617@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 8148](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 1, seq 147, request.prev_log_index() 1, last_log_index() = 1.
RaftLog[5, 8148](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 1 to 1
RaftLog[5, 8148](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 9032](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 175, request.seq() = 174
GTEST: support 3 is not enough. logs[1] is not committed. term 1, original_term 1
GTEST: Do logs[2] = 'log2'
RaftLog[5, 9123](src/test/../node.h:731@do_log) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Append LOCAL log Index 2, Term 1, commit_index 1. Now copy to peers.
RaftLog[5, 9123](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7101 LogEntries[2, 2]
RaftLog[5, 9123](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7101, size 1 term 1.
RaftLog[5, 9123](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7102 LogEntries[2, 2]
RaftLog[5, 9123](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7102, size 1 term 1.
RaftLog[5, 9124](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain 1, because it's GE than Leader's commit 1, entries_size = 1. last_log_index = 2, seq 179
RaftLog[5, 9124](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain 1, because it's GE than Leader's commit 1, entries_size = 1. last_log_index = 2, seq 179
RaftLog[5, 9125](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from 1 to 2 with vote 2. match_index {127.0.0.1:7101:2;}.
RaftLog[5, 9125](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 2 to 2
RaftLog[5, 9125](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 9150](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 2, seq 180, request.prev_log_index() 2, last_log_index() = 2.
RaftLog[5, 9150](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 2 to 2
RaftLog[5, 9150](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 9150](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 2, seq 180, request.prev_log_index() 2, last_log_index() = 2.
RaftLog[5, 9150](src/node.h:606@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply from 2 to 2
RaftLog[5, 9150](src/node.h:617@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply end.
GTEST: support 3 is not enough. logs[2] is not committed. term 1, original_term 1
GTEST: Do logs[3] = 'log3'
RaftLog[5, 125](src/test/../node.h:731@do_log) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Append LOCAL log Index 3, Term 1, commit_index 2. Now copy to peers.
RaftLog[5, 125](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7101 LogEntries[3, 3]
RaftLog[5, 125](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7101, size 1 term 1.
RaftLog[5, 125](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7102 LogEntries[3, 3]
RaftLog[5, 125](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7102, size 1 term 1.
RaftLog[5, 125](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain 2, because it's GE than Leader's commit 2, entries_size = 1. last_log_index = 3, seq 212
RaftLog[5, 125](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain 2, because it's GE than Leader's commit 2, entries_size = 1. last_log_index = 3, seq 212
RaftLog[5, 126](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from 2 to 3 with vote 2. match_index {127.0.0.1:7101:3;}.
RaftLog[5, 126](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 3 to 3
RaftLog[5, 126](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 136](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 3, seq 213, request.prev_log_index() 3, last_log_index() = 3.
RaftLog[5, 136](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 3 to 3
RaftLog[5, 136](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 136](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 3, seq 213, request.prev_log_index() 3, last_log_index() = 3.
RaftLog[5, 136](src/node.h:606@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply from 3 to 3
RaftLog[5, 136](src/node.h:617@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply end.
GTEST: support 3 is not enough. logs[3] is not committed. term 1, original_term 1
           Name        State  Term  log size  commit lastapp   peers    run  trans
 127.0.0.1:7100       Leader     1         4       3       3       2      T      0
 127.0.0.1:7101     Follower     1         4       3       3       2      T      0
 127.0.0.1:7102     Follower     1         4       3       3       2      T      0
GTEST: Now crash all
GTEST: Crash Node 127.0.0.1:7100
GTEST: DisableNode 127.0.0.1:7100
RaftLog[5, 1153](src/test/../node.h:497@stop_unguarded) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Stop node of 127.0.0.1:7100
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7101 from this->peers.
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7102 from this->peers.
GTEST: Crash Node 127.0.0.1:7100 FINISHED
GTEST: Crash Node 127.0.0.1:7101
GTEST: DisableNode 127.0.0.1:7101
RaftLog[5, 1153](src/test/../node.h:497@stop_unguarded) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Stop node of 127.0.0.1:7101
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7100 from this->peers.
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7102 from this->peers.
GTEST: Crash Node 127.0.0.1:7101 FINISHED
GTEST: Crash Node 127.0.0.1:7102
GTEST: DisableNode 127.0.0.1:7102
RaftLog[5, 1153](src/test/../node.h:497@stop_unguarded) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Stop node of 127.0.0.1:7102
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7100 from this->peers.
RaftLog[5, 1153](src/node_conf.cpp:232@remove_peer) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Remove 127.0.0.1:7101 from this->peers.
[libprotobuf ERROR google/protobuf/message_lite.cc:121] Can't parse message of type "raft_messages.PersistRecord" because it is missing required fields: last_seq
GTEST: Crash Node 127.0.0.1:7102 FINISHED
           Name        State  Term  log size  commit lastapp   peers    run  trans
 127.0.0.1:7100       Leader 77777         0      -1      -1       0      F      0
 127.0.0.1:7101     Follower 77777         0      -1      -1       0      F      0
 127.0.0.1:7102     Follower 77777         0      -1      -1       0      F      0
GTEST: Now restart all
GTEST: Recover Node 127.0.0.1:7100
PERSISTER: LOAD 127.0.0.1:7100
RaftLog[5, 1155](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7101. Now size 0
Create channel from host 127.0.0.1:7100 to remote 127.0.0.1:7101
RaftLog[5, 1155](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7102. Now size 1
Create channel from host 127.0.0.1:7100 to remote 127.0.0.1:7102
RaftLog[5, 1155](src/test/../node.h:468@run) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Run node. Switch state to Follower.
RaftLog[5, 1155](src/test/../node.h:508@resume) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Resume node of 127.0.0.1:7100
[libprotobuf ERROR google/protobuf/message_lite.cc:121] Can't parse message of type "raft_messages.PersistRecord" because it is missing required fields: last_seq
GTEST: Recover Node 127.0.0.1:7101
PERSISTER: LOAD 127.0.0.1:7101
RaftLog[5, 1155](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7100. Now size 0
Create channel from host 127.0.0.1:7101 to remote 127.0.0.1:7100
RaftLog[5, 1156](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7102. Now size 1
Create channel from host 127.0.0.1:7101 to remote 127.0.0.1:7102
RaftLog[5, 1156](src/test/../node.h:468@run) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Run node. Switch state to Follower.
RaftLog[5, 1157](src/test/../node.h:508@resume) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Resume node of 127.0.0.1:7101
[libprotobuf ERROR google/protobuf/message_lite.cc:121] Can't parse message of type "raft_messages.PersistRecord" because it is missing required fields: last_seq
GTEST: Recover Node 127.0.0.1:7102
PERSISTER: LOAD 127.0.0.1:7102
RaftLog[5, 1157](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7100. Now size 0
Create channel from host 127.0.0.1:7102 to remote 127.0.0.1:7100
RaftLog[5, 1158](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 4. last_log_index = 3, seq 2
RaftLog[5, 1158](src/node_conf.cpp:210@add_peer) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Add Peer 127.0.0.1:7101. Now size 1
Create channel from host 127.0.0.1:7102 to remote 127.0.0.1:7101
RaftLog[5, 1158](src/test/../node.h:468@run) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Run node. Switch state to Follower.
RaftLog[5, 1158](src/test/../node.h:508@resume) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Resume node of 127.0.0.1:7102
           Name        State  Term  log size  commit lastapp   peers    run  trans
 127.0.0.1:7100       Leader     1         4      -1      -1       2      T      0
 127.0.0.1:7101     Follower     1         4      -1      -1       2      T      0
 127.0.0.1:7102     Follower     1         4      -1      -1       2      T      0
GTEST: Now Whip
RaftLog[5, 1159](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 4. last_log_index = 3, seq 2
RaftLog[5, 1160](src/test/../node.h:731@do_log) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Append LOCAL log Index 4, Term 1, commit_index -1. Now copy to peers.
RaftLog[5, 1160](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7101 LogEntries[0, 4]
RaftLog[5, 1160](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7101, size 5 term 1.
RaftLog[5, 1161](src/node_rpc_a.cpp:59@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Copy to peer 127.0.0.1:7102 LogEntries[0, 4]
RaftLog[5, 1161](src/node_rpc_a.cpp:76@do_append_entries) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Send normal AppendEntriesRequest to 127.0.0.1:7102, size 5 term 1.
RaftLog[5, 1162](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from -1 to 3 with vote 2. match_index {127.0.0.1:7101:3;}.
RaftLog[5, 1162](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 0 to 3
RaftLog[5, 1162](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 1162](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 5. last_log_index = 3, seq 3
RaftLog[5, 1163](src/node_rpc_a.cpp:212@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: My commit_index remain -1, because it's GE than Leader's commit -1, entries_size = 5. last_log_index = 3, seq 3
RaftLog[5, 1165](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 3, seq 245, request.prev_log_index() 3, last_log_index() = 3.
RaftLog[5, 1165](src/node.h:606@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply from 0 to 3
RaftLog[5, 1165](src/node.h:617@do_apply) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 1166](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 244
RaftLog[5, 1187](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 3, seq 4, request.prev_log_index() 3, last_log_index() = 4.
RaftLog[5, 1187](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 0 to 3
RaftLog[5, 1187](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 1187](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 4
RaftLog[5, 1188](src/node_rpc_a.cpp:417@on_append_entries_response) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Advance commit_index from 3 to 4 with vote 2. match_index {127.0.0.1:7101:4;}.
RaftLog[5, 1188](src/node.h:606@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply from 4 to 4
RaftLog[5, 1188](src/node.h:617@do_apply) [Me=127.0.0.1:7100,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 1218](src/node_rpc_a.cpp:207@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Leader 127.0.0.1:7100 ask me to advance commit_index to 4, seq 5, request.prev_log_index() 4, last_log_index() = 4.
RaftLog[5, 1218](src/node.h:606@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply from 4 to 4
RaftLog[5, 1218](src/node.h:617@do_apply) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Do apply end.
RaftLog[5, 1218](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 5
RaftLog[5, 1249](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 6
RaftLog[5, 1280](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 7
RaftLog[5, 1313](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 8
RaftLog[5, 1342](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 9
RaftLog[5, 1373](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 10
RaftLog[5, 1404](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 11
RaftLog[5, 1434](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 12
RaftLog[5, 1465](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 13
RaftLog[5, 1496](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 14
RaftLog[5, 1526](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 15
RaftLog[5, 1556](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 16
RaftLog[5, 1587](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 17
RaftLog[5, 1619](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 18
RaftLog[5, 1651](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 19
RaftLog[5, 1682](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 20
RaftLog[5, 1712](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 21
RaftLog[5, 1713](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 13
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 14
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 15
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 16
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 17
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 18
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 19
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 20
RaftLog[5, 1714](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7101,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 21, request.seq() = 12
RaftLog[5, 1744](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 22
RaftLog[5, 1774](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 23
RaftLog[5, 1805](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 24
RaftLog[5, 1836](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 25
RaftLog[5, 1868](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 26
RaftLog[5, 1898](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 27
RaftLog[5, 1929](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 28
RaftLog[5, 1960](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 29
RaftLog[5, 1992](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 30
RaftLog[5, 2022](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 31
RaftLog[5, 2053](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 32
RaftLog[5, 2084](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 33
RaftLog[5, 2117](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 34
RaftLog[5, 2146](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 35
RaftLog[5, 2177](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 36
RaftLog[5, 2208](src/node_rpc_a.cpp:129@on_append_entries_request) [Me=127.0.0.1:7102,Leader=127.0.0.1:7100]: Out-of-ordered AppendEntriesRequest from 127.0.0.1:7100 last_seq 245, request.seq() = 37
GTEST: In CheckCommit: 127.0.0.1:7102 have no 4 log.
src/test/test.cpp:591: Failure
Value of: n
  Actual: 3
Expected: CheckCommit(ln, "Whip")
Which is: 2
[  FAILED  ] Persist.CrashAll (10026 ms)